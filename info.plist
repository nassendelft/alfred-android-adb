<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.anicks.alfred.adb</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>1095B35C-8EF7-4517-B209-F5EA9C697338</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>39531262-D994-40DA-8F0F-888C3471E21E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>131A527A-9B09-4CA5-AC1D-111BA66282FA</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B96E6EB8-FA76-445D-9587-1EFC6C23C0A1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>1E18758A-BE34-42BE-BEB5-99C876041850</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>39531262-D994-40DA-8F0F-888C3471E21E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>3AFBBC8E-7BD4-49F2-8A7C-75287B360EB1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>39531262-D994-40DA-8F0F-888C3471E21E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4ECA3C5B-5B4E-4212-9BD6-1DF411798AA6</key>
		<array/>
		<key>614B1777-EAAA-4C38-B6EB-108DFD95E7D2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6E7944F5-3D8A-479F-B5A2-9B0D0BD60395</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6E7944F5-3D8A-479F-B5A2-9B0D0BD60395</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>39531262-D994-40DA-8F0F-888C3471E21E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7A331FE9-0245-410B-A8DE-1A624826E1A3</key>
		<array/>
		<key>90AB3AEF-2FB5-4F2B-A038-50BFAB57E285</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>39531262-D994-40DA-8F0F-888C3471E21E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B012D02C-1844-4134-BB93-81E25E2A4B49</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>7A331FE9-0245-410B-A8DE-1A624826E1A3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>9F567B85-0CB2-455D-99C2-F7A5DD9FFA78</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Hide</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B70E952B-FDCA-48B5-BB89-B78BBE725787</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3AFBBC8E-7BD4-49F2-8A7C-75287B360EB1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>DEF58F24-B409-4D7C-AE65-983FAC882D2E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F56B4915-4CC5-46C6-AD5C-7C55529585E2</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>1E18758A-BE34-42BE-BEB5-99C876041850</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Replace existing app</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F2359CB6-39E7-4036-82C4-8DA3E5A4B0B2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>1095B35C-8EF7-4517-B209-F5EA9C697338</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>90AB3AEF-2FB5-4F2B-A038-50BFAB57E285</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Keep data</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F56B4915-4CC5-46C6-AD5C-7C55529585E2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>39531262-D994-40DA-8F0F-888C3471E21E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Nick Assendelft</string>
	<key>description</key>
	<string>Handy adb commands</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Android adb</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>adbrb</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Reboot device</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>131A527A-9B09-4CA5-AC1D-111BA66282FA</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>import subprocess
import os

adb_path = os.getenv('adb_path')

print(subprocess.check_output('{0} -d reboot'.format(adb_path),
                                       stderr=subprocess.STDOUT,
                                       shell=True))</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>3</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>B96E6EB8-FA76-445D-9587-1EFC6C23C0A1</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>adbr</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Restart adb</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>B70E952B-FDCA-48B5-BB89-B78BBE725787</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>import subprocess
import os
import sys

adb_path = os.getenv('adb_path')

response = subprocess.check_output(
           '{0} kill-server &amp;&amp; {1} start-server'.format(adb_path, adb_path),
           stderr=subprocess.STDOUT,
           shell=True)

if 'daemon started successfully' in response:
    sys.stdout.write('Successfully restarted')
else:
    sys.stdout.write('Failed restarting')</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>3</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3AFBBC8E-7BD4-49F2-8A7C-75287B360EB1</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>import subprocess
import os
import sys

adb_path = os.getenv('adb_path')
apk = sys.argv[1]

response = subprocess.check_output(
    '{0} install {1}'.format(adb_path, apk),
    stderr=subprocess.STDOUT,
    shell=True)

if 'Success' in response:
    sys.stdout.write('Successfully installed {0}'.format(apk))
else:
	sys.stdout.write('Failed installing {0}'.format(apk))</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>3</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>F56B4915-4CC5-46C6-AD5C-7C55529585E2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>{query}</string>
				<key>title</key>
				<string>ADB</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>39531262-D994-40DA-8F0F-888C3471E21E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>anchorfields</key>
				<true/>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>daterange</key>
				<integer>0</integer>
				<key>fields</key>
				<array>
					<dict>
						<key>field</key>
						<string>kMDItemDisplayName</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemAlternateNames</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemFinderComment</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
				</array>
				<key>includesystem</key>
				<false/>
				<key>keyword</key>
				<string>adbi</string>
				<key>runningsubtext</key>
				<string></string>
				<key>scopes</key>
				<array/>
				<key>subtext</key>
				<string>Install an apk</string>
				<key>title</key>
				<string>Install</string>
				<key>types</key>
				<array/>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.filefilter</string>
			<key>uid</key>
			<string>DEF58F24-B409-4D7C-AE65-983FAC882D2E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>import subprocess
import os
import sys

adb_path = os.getenv('adb_path')
apk = sys.argv[1]

response = subprocess.check_output(
    '{0} install -r {1}'.format(adb_path, apk),
    stderr=subprocess.STDOUT,
    shell=True)

if 'Success' in response:
    sys.stdout.write('Successfully installed {0}'.format(apk))
else:
	sys.stdout.write('Failed installing {0}'.format(apk))</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>3</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>1E18758A-BE34-42BE-BEB5-99C876041850</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>import subprocess
import os
import sys

adb_path = os.getenv('adb_path')
package = sys.argv[1]

response = subprocess.check_output(
           '{0} uninstall {1}'.format(adb_path, package),
           stderr=subprocess.STDOUT,
           shell=True)

if 'Success' in response:
    sys.stdout.write('Successfully uninstalled {0}'.format(package))
else:
	sys.stdout.write('Failed uninstalling {0}'.format(package))</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>3</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>1095B35C-8EF7-4517-B209-F5EA9C697338</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>adbu</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>python list_apps.py "{query}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Select an app to uninstall</string>
				<key>title</key>
				<string>Uninstall app</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>F2359CB6-39E7-4036-82C4-8DA3E5A4B0B2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>import subprocess
import os
import sys

adb_path = os.getenv('adb_path')
package = sys.argv[1]

response = subprocess.check_output(
           '{0} shell pm uninstall -k {1}'.format(adb_path, package),
           stderr=subprocess.STDOUT,
           shell=True)

if 'Success' in response:
    sys.stdout.write('Successfully uninstalled {0}'.format(package))
else:
	sys.stdout.write('Failed uninstalling {0}'.format(package))</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>3</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>90AB3AEF-2FB5-4F2B-A038-50BFAB57E285</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>$adb_path shell setprop debug.layout on &amp;&amp; $adb_path shell service call activity 1599295570</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>7A331FE9-0245-410B-A8DE-1A624826E1A3</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>adbdl</string>
				<key>subtext</key>
				<string>Show</string>
				<key>text</key>
				<string>Toggle debug layout</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>B012D02C-1844-4134-BB93-81E25E2A4B49</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>$adb_path shell setprop debug.layout off &amp;&amp; $adb_path shell service call activity 1599295570</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>9F567B85-0CB2-455D-99C2-F7A5DD9FFA78</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>import subprocess
import os
import sys

adb_path = os.getenv('adb_path')
package = sys.argv[1]

response = subprocess.check_output(
           '{0} shell pm clear {1}'.format(adb_path, package),
           stderr=subprocess.STDOUT,
           shell=True)

if 'Success' in response:
    sys.stdout.write('Successfully cleared data for {0}'.format(package))
else:
	sys.stdout.write('Failed cleared data for {0}'.format(package))</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>3</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>6E7944F5-3D8A-479F-B5A2-9B0D0BD60395</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>adbdc</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>python list_apps.py "{query}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Select an app to clear data</string>
				<key>title</key>
				<string>Clear app data</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>614B1777-EAAA-4C38-B6EB-108DFD95E7D2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>adba</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>python list_alarms.py "{query}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Show alarms</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>4ECA3C5B-5B4E-4212-9BD6-1DF411798AA6</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>To configure this workflow be sure to set the path to the adb binary. (Configure workflow and variables)
i.e. /usr/local/bin/adb</string>
	<key>uidata</key>
	<dict>
		<key>1095B35C-8EF7-4517-B209-F5EA9C697338</key>
		<dict>
			<key>xpos</key>
			<integer>240</integer>
			<key>ypos</key>
			<integer>650</integer>
		</dict>
		<key>131A527A-9B09-4CA5-AC1D-111BA66282FA</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>40</integer>
		</dict>
		<key>1E18758A-BE34-42BE-BEB5-99C876041850</key>
		<dict>
			<key>xpos</key>
			<integer>240</integer>
			<key>ypos</key>
			<integer>500</integer>
		</dict>
		<key>39531262-D994-40DA-8F0F-888C3471E21E</key>
		<dict>
			<key>xpos</key>
			<integer>570</integer>
			<key>ypos</key>
			<integer>430</integer>
		</dict>
		<key>3AFBBC8E-7BD4-49F2-8A7C-75287B360EB1</key>
		<dict>
			<key>xpos</key>
			<integer>240</integer>
			<key>ypos</key>
			<integer>220</integer>
		</dict>
		<key>4ECA3C5B-5B4E-4212-9BD6-1DF411798AA6</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>1380</integer>
		</dict>
		<key>614B1777-EAAA-4C38-B6EB-108DFD95E7D2</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>1210</integer>
		</dict>
		<key>6E7944F5-3D8A-479F-B5A2-9B0D0BD60395</key>
		<dict>
			<key>xpos</key>
			<integer>240</integer>
			<key>ypos</key>
			<integer>1210</integer>
		</dict>
		<key>7A331FE9-0245-410B-A8DE-1A624826E1A3</key>
		<dict>
			<key>xpos</key>
			<integer>240</integer>
			<key>ypos</key>
			<integer>930</integer>
		</dict>
		<key>90AB3AEF-2FB5-4F2B-A038-50BFAB57E285</key>
		<dict>
			<key>xpos</key>
			<integer>240</integer>
			<key>ypos</key>
			<integer>780</integer>
		</dict>
		<key>9F567B85-0CB2-455D-99C2-F7A5DD9FFA78</key>
		<dict>
			<key>xpos</key>
			<integer>240</integer>
			<key>ypos</key>
			<integer>1060</integer>
		</dict>
		<key>B012D02C-1844-4134-BB93-81E25E2A4B49</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>970</integer>
		</dict>
		<key>B70E952B-FDCA-48B5-BB89-B78BBE725787</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>220</integer>
		</dict>
		<key>B96E6EB8-FA76-445D-9587-1EFC6C23C0A1</key>
		<dict>
			<key>xpos</key>
			<integer>240</integer>
			<key>ypos</key>
			<integer>40</integer>
		</dict>
		<key>DEF58F24-B409-4D7C-AE65-983FAC882D2E</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>430</integer>
		</dict>
		<key>F2359CB6-39E7-4036-82C4-8DA3E5A4B0B2</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>710</integer>
		</dict>
		<key>F56B4915-4CC5-46C6-AD5C-7C55529585E2</key>
		<dict>
			<key>xpos</key>
			<integer>240</integer>
			<key>ypos</key>
			<integer>370</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>adb_path</key>
		<string></string>
	</dict>
	<key>variablesdontexport</key>
	<array>
		<string>adb_path</string>
	</array>
	<key>version</key>
	<string>1.0.2</string>
	<key>webaddress</key>
	<string>https://github.com/nassendelft/alfred-android-adb</string>
</dict>
</plist>
